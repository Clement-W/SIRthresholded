[{"path":[]},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"the-semi-parametric-model","dir":"Articles","previous_headings":"How SIR and SIR thresholded works","what":"The semi-parametric model","title":"How to use the SIRthresholded package","text":"Consider following semi-parametric model: \\[Y = g(\\beta'X,\\epsilon)\\] : \\(Y \\\\mathbb{R}\\) univariate response variable \\(X \\\\mathbb{R}^p\\) \\(p\\)-dimensional covariates \\(\\mathbb{E}(X)=\\mu\\) \\(\\mathbb{V}(X)=\\Sigma\\) \\(\\beta\\) vector generating direction \\(\\mathbb{R}^p\\) \\(\\epsilon\\) random error term, assumed independant \\(X\\) \\(g\\) arbitrary link function (unknown) common present model \\(Y\\perp X\\mid \\beta'X\\) means \\(Y\\) independent \\(X\\) conditional \\(\\beta'X\\). Thus, possible replace \\(X\\\\mathbb{R}^p\\) index \\(\\beta'X\\\\mathbb{R}\\) without loss information regression \\(Y\\) \\(X\\). Thus, dimension reduction explanatory part \\(X\\) \\(p\\)-dimension \\(1\\)-dimension, without specifying either relationship index \\(\\beta'X\\) \\(Y\\) distribution error term \\(\\epsilon\\). framework model, \\(g\\) unknown, identify \\(\\beta\\), can identify direction. define \\(EDR\\) (Effective Dimension Reduction) space \\(E\\) linear subspace \\(\\mathbb{R}^p\\) generated \\(\\beta\\). vector belonging \\(E\\) \\(EDR\\) direction.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"the-sir-method","dir":"Articles","previous_headings":"How SIR and SIR thresholded works","what":"The SIR method","title":"How to use the SIRthresholded package","text":"\\(SIR\\) method used obtain estimate \\(EDR\\) direction. theory, \\(SIR\\) method requires condition distribution explanatory variable \\(X\\) called linearity condition: \\(\\forall b \\\\mathbb{R}^p, \\mathbb{E}[b'X\\mid\\beta'X]\\) linear \\(X'\\beta\\). practice, impossible verify assumption \\(\\beta\\) unknown unidentifiable. However, assumption valid distribution \\(X\\) elliptical, case multidimensional normal distribution. Let’s now consider monotonic transformation \\(T\\) (case SIR method correspond slicing function). previous model linearity condition, (Duan & Li, 1991) showed centered inverse regression curve verifies : \\[\\mathbb{E}[X\\mid T(Y)] - \\mu \\\\mbox{Span}(\\Sigma\\beta)\\] Thus, subspace generated curve, \\({\\mathbb{E}[X \\mid T(Y)] - \\mathbb{E}[X] : Y \\\\mathcal{Y}}\\) (\\(\\mathcal{Y}\\) support response variable \\(Y\\)), belongs \\(EDR\\) space. Therefore, centered inverse regression curve can clearly used find \\(EDR\\) space. direct consequence result, variance covariance matrix curve, \\(\\Gamma = \\mathbb{V}(\\mathbb{E}[X \\mid T(Y)])\\), degenerate direction \\(\\Sigma\\)-orthogonal \\(\\beta\\). Therefore, eigenvector associated largest nonzero eigenvalue matrix interest \\(\\Sigma^{-1}\\Gamma\\) \\(EDR\\) direction, generates \\(EDR\\) space \\(E\\). slicing step \\(SIR\\) method, support \\(Y\\) sliced \\(H\\) slices \\(\\{s_1,\\dots,s_H\\}\\). function \\(T\\) corresponding slicing, matrix \\(\\Gamma\\) can written \\[\\Gamma=\\sum_{h=1}^Hp_h(m_h-\\mu)(m_h-\\mu)'\\] \\(p_h=P(Y\\s_h)\\) theoretical proportion \\(Y_i\\) falling \\(s_h\\) slice \\(m_h=\\mathbb{E}[X\\mid Y\\s_h]\\) theoretical mean \\(X_i\\) associated \\(Y_i\\) falling \\(s_h\\) slice. matrix \\(\\Gamma\\) therefore easy estimate.  Let us consider sample \\(\\{(X_i,Y_i), =1,\\dots,n\\}\\) generated previous model. practice, necessary replace theoretical moments \\(\\mu, \\Sigma, p_h\\) \\(m_h\\) empirical moments. , estimator basis \\(EDR\\) space \\(E\\) obtained via eigenvector \\(\\hat{b}\\) associated largest eigenvalue estimator \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\) \\(\\Sigma^{-1}\\Gamma\\) : \\(\\widehat{\\Sigma}_n= \\frac{1}{n} \\sum_{=1}^n (X_i - \\bar{X}_n)(X_i -\\bar{X}_n)'\\) empirical variance covariance matrix \\(X\\) \\(\\widehat{\\Gamma}_n= \\sum_{h=1}^H\\hat p_{h,n} (\\hat m_{h,n} - \\bar{X}_n)(\\hat m_{h,n} -\\bar{X}_n)'\\) empirical variance covariance matrix empirical means \\(X\\) per slices \\(s_h\\) : \\(\\bar{X}_n= \\frac{1}{n}\\sum_{=1}^nX_i,\\) empirical mean sample \\(\\hat p_{h,n} = \\frac{1}{n}\\sum_{=1}^{n} \\mathbb{} {[Y_i\\{s_h} ]} = \\frac{\\hat{n}_{h,n}}{n}\\) empirical proportion \\(Y_i\\) falling slice \\(s_h\\) (\\(n_{h,n}\\) number \\(Y\\) falling slice \\(s_h\\)) \\(\\hat m_{h,n}=\\frac{1}{\\hat{n}_{h,n} }\\sum_{\\{s_h}}X_i\\) empirical mean \\(X_i\\) \\(Y_i\\) falls slice \\(h\\)","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"variable-selection-by-soft-or-hard-thresholding","dir":"Articles","previous_headings":"How SIR and SIR thresholded works","what":"Variable selection by soft or hard thresholding","title":"How to use the SIRthresholded package","text":"possible perform variable selection SIR regression. method presented computational method using soft hard thresholding matrix interest. Let us define soft thresholding (\\(S\\) soft) hard thresholding (\\(H\\) hard) operators apply matrix \\(M\\) dimension \\(p\\times p\\). real \\(\\lambda\\geq 0\\) \\((,j)\\\\{1,\\dots,p\\}\\times \\{1,\\dots,p\\}\\) : \\[ S_\\lambda(M)_{,j}= sign(M_{,j}) \\times \\begin{cases}       \\lvert M_{,j} \\rvert -\\lambda & \\mbox{} \\lvert M_{,j} \\rvert -\\lambda >0, \\\\       0 & \\text{otherwise.}     \\end{cases} \\] \\[ H_\\lambda(M)_{,j}= \\begin{cases}        M_{,j}  & \\mbox{} \\lvert M_{,j} \\rvert -\\lambda >0, \\\\       0 & \\text{otherwise.}     \\end{cases} \\] \\(sign\\) function returns sign considered element (\\(1\\) positive, \\(0\\) null \\(-1\\) negative). introduce two new methods: \\(ST-SIR\\) soft thresholding matrix interest SIR approach, considers matrix \\(S_\\lambda(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n)\\), \\(HT-SIR\\) hard thresholding matrix interest SIR approach, considers matrix \\(H_\\lambda(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n)\\). approach, eigenvector associated largest eigenvalue \\(S_\\lambda(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n)\\) \\(H_\\lambda(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n)\\) computed, given value \\(\\lambda\\). choice thresholding hyper-parameter \\(\\lambda\\) must provide balance correct variable selection (tilting components considered eigenvector \\(0\\)) low distortion estimated direction \\(\\hat{b}\\) , \\(p^{\\star}\\) useful variables identified, new \\(SIR\\) model can estimated basis \\(p^{\\star}\\) selected variables. Thus, estimation \\(\\beta\\) easier estimation done space reduced dimension.","code":""},{"path":[]},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"sir-function","dir":"Articles","previous_headings":"Overview of the package","what":"SIR function","title":"How to use the SIRthresholded package","text":"Apply single-index \\(SIR\\) \\((X,Y)\\) \\(H\\) slices. function allows obtain estimate basis \\(EDR\\) (Effective Dimension Reduction) space via eigenvector \\(\\hat{b}\\) associated largest nonzero eigenvalue matrix interest \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\). Thus, \\(\\hat{b}\\) \\(EDR\\) direction.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"sir_bootstrap-function","dir":"Articles","previous_headings":"Overview of the package","what":"SIR_bootstrap function","title":"How to use the SIRthresholded package","text":"Apply single-index \\(SIR\\) \\(B\\) bootstraped samples \\((X,Y)\\) \\(H\\) slices.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"sir_threshold-function","dir":"Articles","previous_headings":"Overview of the package","what":"SIR_threshold function","title":"How to use the SIRthresholded package","text":"Apply single-index \\(SIR\\) \\((X,Y)\\) \\(H\\) slices, parameter \\(\\lambda\\) apply soft/hard thresholding interest matrix \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"sir_threshold_opt-function","dir":"Articles","previous_headings":"Overview of the package","what":"SIR_threshold_opt function","title":"How to use the SIRthresholded package","text":"Apply single-index SIR \\((X,Y)\\) \\(H\\) slices, soft/hard thresholding interest matrix \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\) optimal parameter \\(\\lambda_{opt}\\). \\(\\lambda_{opt}\\) found automatically among vector n_lambda \\(\\lambda\\), starting 0 maximum value \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\). feature \\(X\\), number \\(\\lambda\\) associated selection feature stored (vector size \\(p\\)). vector sorted decreasing way. , thanks strucchange::breakpoints, breakpoint found sorted vector. coefficients variables left breakpoint, tend automatically toggled 0 due thresholding operation based \\(\\lambda_{opt}\\), removed (useless variables). Finally, \\(\\lambda_{opt}\\) corresponds first \\(\\lambda\\) associated \\(\\hat{b}\\) provides number zeros breakpoint’s value. example, \\(X \\\\mathbb{R}^{10}\\) n_lambda=100, sorted vector can look like : , breakpoint 8.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"sir_threshold_bootstrap-function","dir":"Articles","previous_headings":"Overview of the package","what":"SIR_threshold_bootstrap function","title":"How to use the SIRthresholded package","text":"Apply single-index optimally soft/hard thresholded \\(SIR\\) \\(H\\) slices n_replications bootstraped replications \\((X,Y)\\). optimal number selected variables number selected variables came back often among replications performed. , can get corresponding \\(\\hat{b}\\) \\(\\lambda_{opt}\\) produce number selected variables result SIR_threshold_opt. method allow validate robustness model.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"example-with-simulated-data","dir":"Articles","previous_headings":"","what":"Example with simulated data","title":"How to use the SIRthresholded package","text":"section : (1) dataset created. (2) Classic SIR applied dataset. outputs S3 summary plot methods described. (3) SIR optimally thresholded applied dataset order variable selection. outputs S3 summary plot methods described. (4) new SIR model estimated relevant variables, selected SIR thresholded. notice estimation EDR direction better classic SIR method. (5) SIR thresholded applied dataset custom \\(\\lambda\\) parameter. (6) bootstrapped version SIR optimally thresholded applied data, order ensure robustness model. outputs S3 summary plot methods described.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"generate-the-data","dir":"Articles","previous_headings":"Example with simulated data","what":"Generate the data","title":"How to use the SIRthresholded package","text":"Let’s create \\(Y = (X\\beta)^3 + \\epsilon\\) : \\(n=200\\) (Sample size) \\(X\\\\mathbb{R}^p\\) \\(X\\sim\\mathcal{N}(0,\\mathbb{}_p)\\) \\(p=30\\) \\(p^\\star=10\\) (\\(10\\) relevant variables \\(X\\)) \\(\\epsilon\\sim\\mathcal{N}(0,20)\\) \\(\\epsilon \\perp \\!\\!\\! \\perp X\\). can now plot Y versus reconstructed index \\(X\\beta\\)","code":"set.seed(4) n <- 200 # Sample size p <- 30 # Number of variables in X p_star <- 10 # Number of relevant variables in X X <- mvtnorm::rmvnorm(n,sigma=diag(p)) # X ~ N(0,I_p) dimnames(X) <- list(1:n, paste(\"X\", 1:p, sep = \"\")) # Rename columns of X  eps <- rnorm(n, sd = 20) # Error  beta <- matrix(c(rep(1,p_star),rep(0,p-p_star)),ncol=1) # Beta = Heaviside function rownames(beta) <- colnames(X) # Rename rows of X  Y <- (X %*% beta)**3 + eps # The model plot(X %*% beta, Y, xlab = \"true index\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"create-a-sir-model","dir":"Articles","previous_headings":"Example with simulated data","what":"Create a SIR model","title":"How to use the SIRthresholded package","text":"SIR function applied data. object res_SIR object class SIR contains many numerical results (see ?SIR details), summarized S3 methods print summary. can now access estimation EDR direction res_SIR$b. Thus, possible compute correlation \\(\\beta\\) \\(\\hat{b}\\) : two graphical outputs obtained method plot objects class SIR.  first plot shows reconstructed index plotting \\(Y\\) versus \\(X\\hat{b}\\) \\(\\hat{b}\\) estimated \\(EDR\\) direction. second one shows ten largest eigenvalues interest matrix. \\(EDR\\) direction eigenvector \\(\\hat{b}\\) associated largest eigenvalue. plot can useful check largest eigenvalues close . case close, interesting try choose second third largest eigenvector reconstruct index. can access interest matrix res_SIR$M1, compute eigenvectors eigenvalues function eigen(). looking \\(\\hat{b}\\), notice coefficient associated variables close \\(0\\). assume variables useless interesting variable selection.","code":"library(SIRthresholded) res_SIR = SIR(Y = Y, X = X, H = 10,graph = FALSE) summary(res_SIR) #>  #> Call: #> SIR(Y = Y, X = X, H = 10, graph = FALSE) #>  #> ===== Sliced Inverse Regression =====  #>  #> Number of observations: 200  #> Number of variables in X: 30  #> Number of slices: 10  #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1              0.34400 #> X2              0.36600 #> X3              0.33200 #> X4              0.32000 #> X5              0.26300 #> X6              0.30500 #> X7              0.27400 #> X8              0.23600 #> X9              0.31200 #> X10             0.30600 #> X11             0.12200 #> X12             0.03120 #> X13             0.01070 #> X14             0.01600 #> X15             0.03300 #> X16             0.00340 #> X17             0.04530 #> X18             0.07400 #> X19             0.04980 #> X20            -0.00491 #> X21             0.07130 #> X22             0.02870 #> X23            -0.08520 #> X24             0.08890 #> X25            -0.01830 #> X26            -0.00849 #> X27             0.00212 #> X28            -0.00874 #> X29            -0.05090 #> X30            -0.00886 cor(c(beta),c(res_SIR$b)) #> [1] 0.9509708 plot(res_SIR,choice=\"estim_ind\") plot(res_SIR,choice=\"eigvals\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"use-optimally-thresholded-sir","dir":"Articles","previous_headings":"Example with simulated data","what":"Use optimally thresholded SIR","title":"How to use the SIRthresholded package","text":"approach directly use optimally thresholded version \\(SIR\\) provide estimate \\(EDR\\) direction, select relevant variables. Let’s start \\(ST-SIR\\) (soft thresholded SIR) 100 \\(\\lambda\\) values test : object res_STSIR object class SIR_threshold_opt contains many numerical results (see ?SIR_threshold_opt details), summarized S3 methods print summary. graphical outputs obtained method plot objects class SIR_threshold_opt.  plot shows evolution \\(cos^2(\\hat{b}_{ST-SIR},\\hat{b}_{SIR})\\) percentage variables selected model, according value \\(\\lambda\\). graph informative shows compromise variable selection distortion estimated direction. \\(\\hat{\\lambda}_{opt}\\) must provide balance two.  plot shows optimal lambda chosen. feature \\(X\\), percentage \\(\\lambda\\) associated selection feature stored vector, sorted plotted . Thanks strucchange::breakpoints, breakpoint found sorted vector, allows deduce \\(\\lambda_{opt}\\) explained Overview.  plot shows regularization path \\(\\hat{b}\\) according value \\(\\lambda\\). , can see according \\(\\lambda\\), variables rapidly converge 0, whereas 10 relevant variables difficult toggle 0. , let’s plot plot Y versus estimated first index \\(X\\hat{b}\\).  can also see graphical outputs SIR_threshold_opt hard thresholding :  hard thresholding method results abrupt variable selection according \\(\\lambda\\)s, wich explains curves straighter bigger jumps values.","code":"res_STSIR = SIR_threshold_opt(Y=Y, X=X, H=10, n_lambda=100, thresholding=\"soft\", graph=FALSE) summary(res_STSIR) #>  #> Call: #> SIR_threshold_opt(Y = Y, X = X, H = 10, n_lambda = 100, thresholding = \"soft\",     graph = FALSE) #>  #> ===== Optimally Thresholded Sliced Inverse Regression =====  #>  #> Number of observations: 200  #> Number of variables in X: 30  #> Number of slices: 10  #> Testing: 100 lambda between 0 and 0.112  #> Optimal thresholding parameter lambda : 0.0717  #> Thresholding method: soft  #>  #> Number of selected variables =  10  over the  30  available variables #> List of relevant variables: X1,X2,X3,X4,X5,X6,X7,X8,X9,X10  #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1               -0.374 #> X2               -0.625 #> X3               -0.369 #> X4               -0.200 #> X5               -0.216 #> X6               -0.163 #> X7               -0.193 #> X8               -0.101 #> X9               -0.319 #> X10              -0.267 #> X11               0.000 #> X12               0.000 #> X13               0.000 #> X14               0.000 #> X15               0.000 #> X16               0.000 #> X17               0.000 #> X18               0.000 #> X19               0.000 #> X20               0.000 #> X21               0.000 #> X22               0.000 #> X23               0.000 #> X24               0.000 #> X25               0.000 #> X26               0.000 #> X27               0.000 #> X28               0.000 #> X29               0.000 #> X30               0.000 #>  #> Estimate a new SIR model on the relevant variables with : #>   SIR(Y=res_STSIR$Y, X=res_STSIR$X_reduced, H=res_STSIR$H) plot(res_STSIR,choice=\"cos2_selec\") plot(res_STSIR,choice=\"opt_lambda\") plot(res_STSIR,choice=\"regul_path\") plot(res_STSIR,choice=\"estim_ind\") res_HTSIR = SIR_threshold_opt(Y=Y, X=X, H=10, n_lambda=100, thresholding=\"hard\", graph=FALSE)  plot(res_HTSIR,choice=\"cos2_selec\") plot(res_HTSIR,choice=\"regul_path\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"estimate-a-new-sir-model-on-the-relevant-variables","dir":"Articles","previous_headings":"Example with simulated data","what":"Estimate a new SIR model on the relevant variables","title":"How to use the SIRthresholded package","text":"soft thresholding deforms matrix interest \\(\\lambda\\) parameter, estimation \\(\\hat{b}\\) biased. , end S3 summary method, proposed create new SIR model based relevant variables, selected method. Let’s copy paste command line result SIR_threshold_opt see results: Let’s plot Y versus estimated first index \\(X\\hat{b}\\)  directly notice estimated index close theoretical index plotted earlier. done previously, let’s compute correlation \\(\\beta\\) \\(\\hat{b}_{ST-SIR-p^\\star}\\) compare results classic SIR. real \\(\\beta\\) vector length 30 \\(\\hat{b}_{ST-SIR-p^\\star}\\) length 10, need create new vector size 30 able compare . Let’s compute correlation : notice estimation \\(\\beta\\) better classic \\(SIR\\) method (95% \\(SIR\\) 99% \\(ST-SIR-p^\\star\\)). 20 useless variables eliminated, estimation \\(EDR\\) direction good. Wether using hard soft thresholding, always relevent create new \\(SIR\\) model considering relevant variables. allows improve estimation \\(EDR\\) direction.","code":"res_SIR_pstar = SIR(Y=res_STSIR$Y, X=res_STSIR$X_reduced, H=res_STSIR$H) summary(res_SIR_pstar) #>  #> Call: #> SIR(Y = res_STSIR$Y, X = res_STSIR$X_reduced, H = res_STSIR$H) #>  #> ===== Sliced Inverse Regression =====  #>  #> Number of observations: 200  #> Number of variables in X: 10  #> Number of slices: 10  #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1               -0.370 #> X2               -0.359 #> X3               -0.348 #> X4               -0.315 #> X5               -0.291 #> X6               -0.282 #> X7               -0.288 #> X8               -0.255 #> X9               -0.324 #> X10              -0.313 plot(res_SIR_pstar,choice=\"estim_ind\") b_extended <- matrix(rep(0,p),nrow=1) # Create the empty vector colnames(b_extended) <- colnames(X) # Assign the colnames of X # Assign the values of b_extended according to the colnames b_extended[which(colnames(b_extended) %in% colnames(res_SIR_pstar$b))] = res_SIR_pstar$b cor(c(beta),c(b_extended)) #> [1] -0.9908271"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"sir-thresholded-with-a-given-lambda-parameter","dir":"Articles","previous_headings":"Example with simulated data","what":"SIR thresholded with a given \\(\\lambda\\) parameter","title":"How to use the SIRthresholded package","text":"want experiment thresholding operation , can call SIR_threshold give \\(\\lambda\\) threshold interest matrix :","code":"res_SIR_thresh = SIR_threshold(Y, X, H = 10, lambda = 0.04, thresholding = \"hard\") summary(res_SIR_thresh) #>  #> Call: #> SIR_threshold(Y = Y, X = X, H = 10, lambda = 0.04, thresholding = \"hard\") #>  #> ===== Thresholded Sliced Inverse Regression =====  #>  #> Number of observations: 200  #> Number of variables in X: 30  #> Number of slices: 10  #> Thresholding parameter lambda: 0.04  #> Thresholding method: hard #>  #> Number of selected variables =  15  over the  30  available variables #> List of relevant variables: X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X14,X15,X18,X23  #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1             -0.36200 #> X2             -0.37300 #> X3             -0.33400 #> X4             -0.33400 #> X5             -0.26900 #> X6             -0.32100 #> X7             -0.27500 #> X8             -0.22600 #> X9             -0.31100 #> X10            -0.31700 #> X11            -0.07260 #> X12             0.00000 #> X13             0.00000 #> X14             0.00387 #> X15            -0.01610 #> X16             0.00000 #> X17             0.00000 #> X18            -0.01850 #> X19             0.00000 #> X20             0.00000 #> X21             0.00000 #> X22             0.00000 #> X23             0.03170 #> X24             0.00000 #> X25             0.00000 #> X26             0.00000 #> X27             0.00000 #> X28             0.00000 #> X29             0.00000 #> X30             0.00000 #>  #> Estimate a new SIR model on the relevant variables with : #>   SIR(Y=res_SIR_thresh$Y, X=res_SIR_thresh$X_reduced, H=res_SIR_thresh$H)"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"test-the-robustness-of-the-model-with-bootstrapping","dir":"Articles","previous_headings":"Example with simulated data","what":"Test the robustness of the model with bootstrapping","title":"How to use the SIRthresholded package","text":"test robustness model, relevant perform bootstrapping. method even relevant sample size small. Lets call SIR_threshold_bootstrap data, 10 replications (10 simplify vignettes building), bootstrapped sample size multiplied 2 (k=2) hard thresholding method : object res_SIR_boot object class SIR_threshold_bootstrap contains many numerical results (see ?SIR_threshold_bootstrap details), summarized S3 methods print summary. graphical outputs obtained method plot objects class SIR_threshold_bootstrap.  barplot shows distribution number variables keeped model.  barplot shows percentage selection model every variables.  boxplot shows distribution \\(\\lambda_{opt}\\) choosen replications. Moreover, \\(\\lambda_{opt}\\) selected (see overview) indicated purple horizontal line.  plot shows distribution every coefficients \\(\\hat{b}\\) computed replications. final coefficients \\(\\hat{b}\\) computed (see overview) indicated purple dot. done SIR_threshold_opt, can also create new SIR model considering relevant variables.","code":"res_SIR_boot = SIR_threshold_bootstrap(Y,X,H=10,n_lambda=100,thresholding=\"hard\", n_replications=10,k=2,graph = FALSE) #> [1] \"Replication 5 / 10\" #> [1] \"Replication 10 / 10\" summary(res_SIR_boot) #>  #> Call: #> SIR_threshold_bootstrap(Y = Y, X = X, H = 10, thresholding = \"hard\",     n_replications = 10, graph = FALSE, n_lambda = 100, k = 2) #>  #> ===== Optimally Thresholded Sliced Inverse Regression on bootstrapped replications =====  #>  #> Number of observations: 200  #> Number of variables in X: 30  #> Number of slices: 10  #> Number of bootstraped replications: 10  #> Optimal thresholding parameter lambda : 0.0717  #> Thresholding method: hard #>  #> Number of selected variables =  10  over the  30  available variables #> List of relevant variables: X1,X2,X3,X4,X5,X6,X7,X8,X9,X10  #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1                0.399 #> X2                0.363 #> X3                0.395 #> X4                0.390 #> X5                0.196 #> X6                0.284 #> X7                0.197 #> X8                0.135 #> X9                0.355 #> X10               0.315 #> X11               0.000 #> X12               0.000 #> X13               0.000 #> X14               0.000 #> X15               0.000 #> X16               0.000 #> X17               0.000 #> X18               0.000 #> X19               0.000 #> X20               0.000 #> X21               0.000 #> X22               0.000 #> X23               0.000 #> X24               0.000 #> X25               0.000 #> X26               0.000 #> X27               0.000 #> X28               0.000 #> X29               0.000 #> X30               0.000 #>  #> Estimate a new SIR model on the relevant variables with : #>   SIR(Y=res_SIR_boot$Y, X=res_SIR_boot$X_reduced, H=res_SIR_boot$H) plot(res_SIR_boot,choice=\"size\") plot(res_SIR_boot,choice=\"selec_var\") plot(res_SIR_boot,choice=\"lambdas_replic\") plot(res_SIR_boot,choice=\"coefs_b\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"example-with-wine-dataset","dir":"Articles","previous_headings":"","what":"Example with Wine dataset","title":"How to use the SIRthresholded package","text":"section : (1) Load wine dataset. (2) first SIR model optimally thresholded applied data. (3) bootstrapped version SIR optimally thresholded applied data. (4) SIR model thresholded custom \\(\\lambda\\) applied data. (5) SIR model applied relevant variables (6) Additional study quality model multiple linear regression (7) Concluding remarks","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"the-data","dir":"Articles","previous_headings":"Example with Wine dataset","what":"The data","title":"How to use the SIRthresholded package","text":"example, chose wine dataset UCI machine learning repository (official link working anymore, please find another version dataset link https://gist.githubusercontent.com/tijptjik/9408623/raw/b237fa5848349a14a14e5d4107dc7897c21951f5/wine.csv). explained page description dataset, data results chemical analysis wines grown region Italy. analysis determined quantities 12 constituents found 178 samples wine. , ’ll try find relevant variables order perform regression response variable Nonflavanoids according 12 constituents. First, let’s load dataset. X data contains 178 samples 12 variables. suggested description page dataset, ’ll standardise variables scale() method. , scaling data mandatory ensure SIR method works properly.","code":"wine <-  read.csv(\"https://gist.githubusercontent.com/Clement-W/26d99a28ab89929b6321f70a04535451/raw/169a36568d1fc7c5a7c508e8d3e720d5040744cd/wine.csv\", header = FALSE)  colnames(wine) <- c('Type', 'Alcohol', 'Malic', 'Ash', 'Alcalinity', 'Magnesium',                      'Phenols', 'Flavanoids', 'Nonflavanoids', 'Proanthocyanins',                      'Color', 'Hue', 'Dilution', 'Proline')  # Extract the response variable Y <- wine$Nonflavanoids # Remove the response variable (Nonflavanoids) and the class information (type of cultivars) X <- wine[, -which(names(wine) %in% c(\"Type\",\"Nonflavanoids\"))]   head(cbind(Y,X),3) #>      Y Alcohol Malic  Ash Alcalinity Magnesium Phenols Flavanoids #> 1 0.28   14.23  1.71 2.43       15.6       127    2.80       3.06 #> 2 0.26   13.20  1.78 2.14       11.2       100    2.65       2.76 #> 3 0.30   13.16  2.36 2.67       18.6       101    2.80       3.24 #>   Proanthocyanins Color  Hue Dilution Proline #> 1            2.29  5.64 1.04     3.92    1065 #> 2            1.28  4.38 1.05     3.40    1050 #> 3            2.81  5.68 1.03     3.17    1185 print(dim(X)) #> [1] 178  12 X = scale(X) Y = scale(Y)"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"a-first-sir-model","dir":"Articles","previous_headings":"Example with Wine dataset","what":"A first SIR model","title":"How to use the SIRthresholded package","text":"Now, can use SIR_threshold_opt variable selection optimal thresholding parameter. sample size relatively small. improve estimations \\(p_h\\) \\(m_h\\) SIR method (details first part vignette), reduce number slices 5, sample slices. first model, 2 variables selected : Ash Flavanoids. Let’s explore graphs better understand going .  first note model noisy. However, still notice linear tendency estimated index Y. Let’s now focus variable selection.  two graphs helps us understand link variable selection (coefficients \\(\\hat{b}\\)) \\(\\lambda\\). , \\(\\lambda_{opt}\\) allows select 2 variables. first plot, notice \\(\\lambda\\) bit less \\(\\lambda_{opt}\\), selected 2 3 variables, improving estimation \\(\\hat{b}\\). fact, second plot, notice coefficients \\(\\hat{b}\\) associated variables Dillution, Magnesium Hue set 0 \\(\\lambda_{opt}\\).","code":"res1 = SIR_threshold_opt(Y=Y, X=X, H=5, n_lambda=300, thresholding=\"soft\", graph=FALSE) summary(res1) #>  #> Call: #> SIR_threshold_opt(Y = Y, X = X, H = 5, n_lambda = 300, thresholding = \"soft\",     graph = FALSE) #>  #> ===== Optimally Thresholded Sliced Inverse Regression =====  #>  #> Number of observations: 178  #> Number of variables in X: 12  #> Number of slices: 5  #> Testing: 300 lambda between 0 and 0.241  #> Optimal thresholding parameter lambda : 0.154  #> Thresholding method: soft  #>  #> Number of selected variables =  2  over the  12  available variables #> List of relevant variables: Ash,Flavanoids  #>  #> Results of EDR directions estimation: #>  #>                 Estimated direction #> Alcohol                       0.000 #> Malic                         0.000 #> Ash                          -0.127 #> Alcalinity                    0.000 #> Magnesium                     0.000 #> Phenols                       0.000 #> Flavanoids                    0.992 #> Proanthocyanins               0.000 #> Color                         0.000 #> Hue                           0.000 #> Dilution                      0.000 #> Proline                       0.000 #>  #> Estimate a new SIR model on the relevant variables with : #>   SIR(Y=res1$Y, X=res1$X_reduced, H=res1$H) plot(res1,choice=\"estim_ind\") plot(res1,choice=\"cos2_selec\") plot(res1,choice=\"regul_path\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"perform-bootstrap","dir":"Articles","previous_headings":"Example with Wine dataset","what":"Perform Bootstrap","title":"How to use the SIRthresholded package","text":"data noisy, sample size small, \\(\\lambda_{opt}\\) obtained SIR_threshold_opt questionable, relevant perform SIR_threshold_opt bootstrapped replications dataset. Let’s perform 500 replications, bootstrapped sample size multiplied 2 : Let’s explore graphical outputs :  500 replications, 50% models selected 2 variables. , approximately 45% models selected 3,4,5 6 variables. Let’s take look percentage variable selection.  expected, large majority models selected variables Ash Flavanoids. interesting see 4 variables regularly selected (30 40% replications) : Magnesium, Phenols, Hue Dilution. notice variables closed selected SIR_threshold_opt.  Looking boxplot value \\(\\hat{b}\\) 500 replications, also find results. coefficients \\(\\hat{b}\\) associated Magnesium, Phenols, Hue Dilution greater 0 median. interesting create SIR model, contains variable.","code":"# To lighten the build of the vignette, the result of this command was saved into a RData file. #res2 = SIR_threshold_bootstrap(Y=Y, X=X, H=5, n_lambda=200, thresholding=\"hard\", n_replications = 500 , graph=FALSE) load(\"../R/sysdata.rda\") # load res2 summary(res2) #>  #> Call: #> SIR_threshold_bootstrap(Y = scale(Y), X = scale(X), H = 5, n_replications = 500,     n_lambda = 200) #>  #> ===== Optimally Thresholded Sliced Inverse Regression on bootstrapped replications =====  #>  #> Number of observations: 178  #> Number of variables in X: 12  #> Number of slices: 5  #> Number of bootstraped replications: 500  #> Optimal thresholding parameter lambda : 0.146  #> Thresholding method: hard #>  #> Number of selected variables =  2  over the  12  available variables #> List of relevant variables: Ash,Flavanoids  #>  #> Results of EDR directions estimation: #>  #>                 Estimated direction #> Alcohol                       0.000 #> Malic                         0.000 #> Ash                          -0.436 #> Alcalinity                    0.000 #> Magnesium                     0.000 #> Phenols                       0.000 #> Flavanoids                    0.900 #> Proanthocyanins               0.000 #> Color                         0.000 #> Hue                           0.000 #> Dilution                      0.000 #> Proline                       0.000 #>  #> Estimate a new SIR model on the relevant variables with : #>   SIR(Y=res2$Y, X=res2$X_reduced, H=res2$H) plot(res2,choice=\"size\") plot(res2,choice=\"selec_var\") plot(res2,choice=\"coefs_b\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"thresholding-with-a-custom-lambda","dir":"Articles","previous_headings":"Example with Wine dataset","what":"Thresholding with a custom \\(\\lambda\\)","title":"How to use the SIRthresholded package","text":"Let’s look regularization path plotted earlier, find \\(\\lambda\\) select 4 potentially relevant variables. looking top axis regularization path, find first lambda select 6 variables, approximately 0.07 : Now, 6 variables selected estimation \\(\\hat{b}.\\). Let’s estimate new SIR model relevant variables.","code":"res3 = SIR_threshold(Y=Y, X=X, H=5, lambda = 0.071, thresholding=\"hard\", graph=FALSE) summary(res3) #>  #> Call: #> SIR_threshold(Y = Y, X = X, H = 5, lambda = 0.071, thresholding = \"hard\",     graph = FALSE) #>  #> ===== Thresholded Sliced Inverse Regression =====  #>  #> Number of observations: 178  #> Number of variables in X: 12  #> Number of slices: 5  #> Thresholding parameter lambda: 0.071  #> Thresholding method: hard #>  #> Number of selected variables =  6  over the  12  available variables #> List of relevant variables: Ash,Magnesium,Phenols,Flavanoids,Hue,Dilution  #>  #> Results of EDR directions estimation: #>  #>                 Estimated direction #> Alcohol                       0.000 #> Malic                         0.000 #> Ash                           0.321 #> Alcalinity                    0.000 #> Magnesium                    -0.322 #> Phenols                       0.229 #> Flavanoids                   -0.764 #> Proanthocyanins               0.000 #> Color                         0.000 #> Hue                           0.342 #> Dilution                     -0.202 #> Proline                       0.000 #>  #> Estimate a new SIR model on the relevant variables with : #>   SIR(Y=res3$Y, X=res3$X_reduced, H=res3$H)"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"estimate-a-sir-model-on-the-relevant-variables","dir":"Articles","previous_headings":"Example with Wine dataset","what":"Estimate a SIR model on the relevant variables","title":"How to use the SIRthresholded package","text":"Let’s copy paste command previous output S3 summary method, plot estimated index versus Y :  can note estimated index seems bit less noisy, linear tendency easier see.","code":"res4 = SIR(Y=res3$Y, X=res3$X_reduced, H=res3$H, graph = FALSE) summary(res4) #>  #> Call: #> SIR(Y = res3$Y, X = res3$X_reduced, H = res3$H, graph = FALSE) #>  #> ===== Sliced Inverse Regression =====  #>  #> Number of observations: 178  #> Number of variables in X: 6  #> Number of slices: 5  #>  #> Results of EDR directions estimation: #>  #>            Estimated direction #> Ash                     -0.388 #> Magnesium                0.297 #> Phenols                 -0.250 #> Flavanoids               0.745 #> Hue                     -0.194 #> Dilution                 0.324 plot(res4,choice=\"estim_ind\")"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"additional-study","dir":"Articles","previous_headings":"Example with Wine dataset","what":"Additional study","title":"How to use the SIRthresholded package","text":"Visually, link Y X seems linear. estimate quality model, evaluate relevance selected variable, can build linear model data. Let’s start model containing every variables : R-squared equal 44.33%, aproximately 44% variability explained model. also notice coefficients associated variables Ash, Magnesium, Flavanoids, Hue Dilution significants. Let’s compare R-squared obtained variables selected previous SIR model : first model res1 selected Flavanoids Ash : model custom thresholding parameter res3 selected Flavanoids, Ash, Magnesium, Dilution, Phenols, Hue : best compromise seems SIR model keep 6 variables. R-squared almost identical (-1%) half variables kept.","code":"summary(lm(Y~X)) #>  #> Call: #> lm(formula = Y ~ X) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.11496 -0.41347 -0.00877  0.47458  2.62253  #>  #> Coefficients: #>                    Estimate Std. Error t value Pr(>|t|)     #> (Intercept)      -3.303e-16  5.792e-02   0.000 1.000000     #> XAlcohol         -4.363e-02  9.105e-02  -0.479 0.632424     #> XMalic            7.486e-02  7.453e-02   1.004 0.316694     #> XAsh              3.109e-01  8.238e-02   3.774 0.000224 *** #> XAlcalinity       2.629e-03  8.691e-02   0.030 0.975908     #> XMagnesium       -2.540e-01  6.628e-02  -3.833 0.000180 *** #> XPhenols          1.112e-01  1.206e-01   0.922 0.358116     #> XFlavanoids      -4.876e-01  1.492e-01  -3.267 0.001321 **  #> XProanthocyanins  5.665e-02  8.152e-02   0.695 0.488121     #> XColor            4.774e-02  1.010e-01   0.473 0.636979     #> XHue              1.945e-01  9.154e-02   2.125 0.035066 *   #> XDilution        -2.527e-01  1.113e-01  -2.271 0.024464 *   #> XProline         -5.248e-02  9.752e-02  -0.538 0.591230     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.7728 on 165 degrees of freedom #> Multiple R-squared:  0.4433, Adjusted R-squared:  0.4028  #> F-statistic: 10.95 on 12 and 165 DF,  p-value: 7.236e-16 summary(lm(Y~Flavanoids+Ash,data=wine))$r.squared #> [1] 0.351731 summary(lm(Y~Ash+Magnesium+Phenols+Flavanoids+Hue+Dilution,data=wine))$r.squared #> [1] 0.4339991"},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"concluding-remarks","dir":"Articles","previous_headings":"Example with Wine dataset","what":"Concluding remarks","title":"How to use the SIRthresholded package","text":"package SIRthresholded helped us find relevant variables, order create best non-parametric regression response variable Nonflavanoids. example shown using SIR_threshold_opt can limiting real data, especially data noisy small sample size. method SIR_threshold_bootstrap helped us counter issue, retrieve important information potential relevant variables. Finally, best model res4 SIR model based 6 relevant variables : Flavanoids, Ash, Magnesium, Dilution, Phenols, Hue.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/articles/SIRthresholded.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"How to use the SIRthresholded package","text":"Duan, N., & Li, K.-C. (1991). Slicing Regression : Link-Free Regression Method. Annals Statistics, 19(2), 505‑530. Dua, D. Graff, C. (2019). UCI Machine Learning Repository. Irvine, CA: University California, School Information Computer Science.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clement Weinreich. Author, maintainer. Jerome Saracco. Author. Hadrien Lorenzo. Author.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Weinreich C, Saracco J, Lorenzo H (2023). SIRthresholded: Sliced Inverse Regression Thresholding. R package version 1.0.1, https://clement-w.github.io/SIRthresholded/.","code":"@Manual{,   title = {SIRthresholded: Sliced Inverse Regression with Thresholding},   author = {Clement Weinreich and Jerome Saracco and Hadrien Lorenzo},   year = {2023},   note = {R package version 1.0.1},   url = {https://clement-w.github.io/SIRthresholded/}, }"},{"path":"https://clement-w.github.io/SIRthresholded/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Sliced Inverse Regression with Thresholding","text":"package offers implementation SIR (Sliced Inverse Regression) method, along thresholded version SIR allows variable selection. Fore information, can check vignette package link, explore code GitHub repository. paper currently written.","code":""},{"path":[]},{"path":"https://clement-w.github.io/SIRthresholded/index.html","id":"from-cran","dir":"","previous_headings":"Install","what":"From CRAN","title":"Sliced Inverse Regression with Thresholding","text":"","code":"install.packages(\"SIRthresholded\")"},{"path":"https://clement-w.github.io/SIRthresholded/index.html","id":"from-github","dir":"","previous_headings":"Install","what":"From GitHub","title":"Sliced Inverse Regression with Thresholding","text":"install current development version GitHub: also possible clone repository, install manually (note: pandoc required build vignette):","code":"# install.packages(\"devtools\") devtools::install_github(\"clement-w/sirthresholded\", build_vignettes = TRUE) git clone git@github.com:Clement-W/SIRthresholded.git cd SIRthresholded R # install.packages(\"devtools\") devtools::install(build_vignettes = TRUE) library(SIRthresholded)"},{"path":"https://clement-w.github.io/SIRthresholded/index.html","id":"access-the-vignette","dir":"","previous_headings":"Install","what":"Access the vignette","title":"Sliced Inverse Regression with Thresholding","text":"package installed, can access vignette ","code":"vignette(\"SIRthresholded\")"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Classic SIR — SIR","title":"Classic SIR — SIR","text":"Apply single-index \\(SIR\\) \\((X,Y)\\) \\(H\\) slices. function allows obtain  estimate basis \\(EDR\\) (Effective Dimension Reduction) space via eigenvector  \\(\\hat{b}\\) associated largest nonzero eigenvalue matrix interest \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\). Thus, \\(\\hat{b}\\) \\(EDR\\) direction.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classic SIR — SIR","text":"","code":"SIR(Y, X, H = 10, graph = TRUE, choice = \"\")"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classic SIR — SIR","text":"Y numeric vector representing dependent variable (response vector). X matrix representing quantitative explanatory variables (bind column). H chosen number slices (default 10). graph boolean must set true display graphics (default TRUE). choice graph plot: \"eigvals\" Plot eigen values matrix interest. \"estim_ind\" Plot estimated index SIR model versus Y. \"\" Plot every graphs. (default)","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classic SIR — SIR","text":"object class SIR, attributes: b estimated EDR direction, principal  eigenvector interest matrix. M1 interest matrix. eig_val eigenvalues interest matrix. n Sample size. p number variables X. H chosen number slices. call Unevaluated call function. index_pred index Xb' estimated SIR. Y response vector.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classic SIR — SIR","text":"","code":"# Generate Data set.seed(10) n <- 500 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply SIR SIR(Y, X, H = 10) #>  #> Call: #> SIR(Y = Y, X = X, H = 10) #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1             -0.71000 #> X2             -0.69900 #> X3             -0.01830 #> X4              0.03170 #> X5              0.00323 #> X6              0.06760 #> X7              0.01050 #> X8              0.00896 #> X9              0.00403 #> X10            -0.01110 #>"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap SIR — SIR_bootstrap","title":"Bootstrap SIR — SIR_bootstrap","text":"Apply single-index \\(SIR\\) \\(B\\) bootstraped samples \\((X,Y)\\) \\(H\\) slices.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap SIR — SIR_bootstrap","text":"","code":"SIR_bootstrap(Y, X, H = 10, B = 10, graph = TRUE, choice = \"\")"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap SIR — SIR_bootstrap","text":"Y numeric vector representing dependent variable (response vector). X matrix representing quantitative explanatory variables (bind column). H chosen number slices (default 10). B number bootstrapped samples draw (default 10). graph boolean must set true display graphics (default TRUE). choice graph plot: \"eigvals\" Plot eigen values matrix interest. \"estim_ind\" Plot estimated index SIR model versus Y. \"\" Plot every graphs (default).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap SIR — SIR_bootstrap","text":"object class SIR_bootstrap, attributes: b estimated EDR direction, principal eigenvector interest matrix. mat_b matrix size p*B contains estimation beta  columns bootstrapped sample. n Sample size. p number variables X. H chosen number slices. call Unevaluated call function. index_pred index b'X estimated SIR. Y response vector.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap SIR — SIR_bootstrap","text":"","code":"# Generate Data set.seed(10) n <- 500 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply bootstrap SIR SIR_bootstrap(Y, X, H = 10, B = 10) #>  #> Call: #> SIR_bootstrap(Y = Y, X = X, H = 10, B = 10) #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1              0.71000 #> X2              0.70000 #> X3              0.02060 #> X4             -0.03230 #> X5             -0.00665 #> X6             -0.06550 #> X7             -0.02100 #> X8             -0.00582 #> X9              0.00288 #> X10             0.00845 #>"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"SIR threshold — SIR_threshold","title":"SIR threshold — SIR_threshold","text":"Apply single-index \\(SIR\\) \\((X,Y)\\) \\(H\\) slices, parameter \\(\\lambda\\)  apply soft/hard thresholding interest matrix \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SIR threshold — SIR_threshold","text":"","code":"SIR_threshold(   Y,   X,   H = 10,   lambda = 0,   thresholding = \"hard\",   graph = TRUE,   choice = \"\" )"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SIR threshold — SIR_threshold","text":"Y numeric vector representing dependent variable (response vector). X matrix representing quantitative explanatory variables (bind column). H chosen number slices (default 10). lambda thresholding parameter (default 0). thresholding thresholding method choose hard soft (default hard). graph boolean must set true display graphics (default TRUE). choice graph plot: \"eigvals\" Plot eigen values matrix interest. \"estim_ind\" Plot estimated index SIR model versus Y. \"\" Plot every graphs (default).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SIR threshold — SIR_threshold","text":"object class SIR_threshold, attributes: b estimated EDR direction, principal eigenvector  interest matrix. M1 interest matrix thresholded. eig_val eigenvalues interest matrix thresholded. eig_vect matrix corresponding eigenvectors interest matrix. Y response vector. n Sample size. p number variables X. H chosen number slices. nb.zeros number 0 estimation vector beta. index_pred index Xb' estimated SIR. list.relevant.variables list contains variables selected model. cos_squared cosine squared vanilla SIR SIR thresholded. lambda thresholding parameter used. thresholding thresholding method used. call Unevaluated call function. X_reduced X data restricted variables selected model. can used estimate new SIR model relevant variables improve estimation b.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SIR threshold — SIR_threshold","text":"","code":"# Generate Data set.seed(10) n <- 500 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply SIR with hard thresholding SIR_threshold(Y, X, H = 10, lambda = 0.2, thresholding = \"hard\") #>  #> Call: #> SIR_threshold(Y = Y, X = X, H = 10, lambda = 0.2, thresholding = \"hard\") #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1                0.712 #> X2                0.702 #> X3                0.000 #> X4                0.000 #> X5                0.000 #> X6                0.000 #> X7                0.000 #> X8                0.000 #> X9                0.000 #> X10               0.000 #>"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"SIR optimally thresholded on bootstraped replications — SIR_threshold_bootstrap","title":"SIR optimally thresholded on bootstraped replications — SIR_threshold_bootstrap","text":"Apply single-index optimally soft/hard thresholded \\(SIR\\) \\(H\\) slices  `n_replications` bootstraped replications \\((X,Y)\\). optimal number  selected variables number selected variables came back often  among replications performed. , can get corresponding \\(\\hat{b}\\)  \\(\\lambda_{opt}\\) produce number selected variables result  `SIR_threshold_opt`.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SIR optimally thresholded on bootstraped replications — SIR_threshold_bootstrap","text":"","code":"SIR_threshold_bootstrap(   Y,   X,   H = 10,   thresholding = \"hard\",   n_replications = 50,   graph = TRUE,   output = TRUE,   n_lambda = 100,   k = 2,   choice = \"\" )"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SIR optimally thresholded on bootstraped replications — SIR_threshold_bootstrap","text":"Y numeric vector representing dependent variable (response vector). X matrix representing quantitative explanatory variables (bind column). H chosen number slices (default 10). thresholding thresholding method choose hard soft (default hard). n_replications number bootstraped replications (X,Y) done estimate model (default 50). graph boolean, set TRUE plot graphs (default TRUE). output boolean, set TRUE print information (default TRUE). n_lambda number lambda test. n_lambda tested lambdas uniformally distributed 0 maximum value interest matrix (default 100). k Multiplication factor bootstrapped sample size (default 1 = keep size original data). choice graph plot: \"estim_ind\" Plot estimated index SIR model versus Y. \"size\" Plot size models across replications. \"selec_var\" Plot occurrence selected variables across replications. \"coefs_b\" Plot value b across replications. \"lambdas_replic\" Plot optimal lambdas across replications. \"\" Plot every graphs (default).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SIR optimally thresholded on bootstraped replications — SIR_threshold_bootstrap","text":"object class SIR_threshold_bootstrap, attributes: b optimal estimated EDR direction, principal  eigenvector interest matrix. lambda_opt optimal lambda. vec_nb_var_selec Vector contains number selected variables  replications. occurrences_var Vector contains index number times  i_th variable selected replication. call Unevaluated call function. nb_var_selec_opt Optimal number selected variables number  selected variables came back often among replications performed. list_relevant_variables list contains variables selected  model. n Sample size. p number variables X. H chosen number slices. n_replications number bootstraped replications (X,Y) done estimate model. thresholding thresholding method used. X_reduced X data restricted variables selected model. can used estimate new SIR model relevant variables improve estimation b. mat_b Contains estimation b bootstraped replications. lambdas_opt_boot Contains optimal lambda found SIR_threshold_opt  replication. index_pred index Xb' estimated SIR. Y response vector. M1 interest matrix thresholded optimal lambda.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SIR optimally thresholded on bootstraped replications — SIR_threshold_bootstrap","text":"","code":"# Generate Data set.seed(8) n <-  170 beta <- c(1,1,1,1,1,rep(0,15)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,20)) eps <- rnorm(n,sd=8) Y <- (X%*%beta)**3+eps  # Apply SIR with hard thresholding SIR_threshold_bootstrap(Y,X,H=10,n_lambda=300,thresholding=\"hard\", n_replications=30,k=2) #> [1] \"Replication 5 / 30\" #> [1] \"Replication 10 / 30\" #> [1] \"Replication 15 / 30\" #> [1] \"Replication 20 / 30\" #> [1] \"Replication 25 / 30\" #> [1] \"Replication 30 / 30\" #>  #> Call: #> SIR_threshold_bootstrap(Y = Y, X = X, H = 10, thresholding = \"hard\",     n_replications = 30, n_lambda = 300, k = 2) #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1                0.441 #> X2                0.497 #> X3                0.442 #> X4                0.426 #> X5                0.427 #> X6                0.000 #> X7                0.000 #> X8                0.000 #> X9                0.000 #> X10               0.000 #> X11               0.000 #> X12               0.000 #> X13               0.000 #> X14               0.000 #> X15               0.000 #> X16               0.000 #> X17               0.000 #> X18               0.000 #> X19               0.000 #> X20               0.000 #>"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_opt.html","id":null,"dir":"Reference","previous_headings":"","what":"SIR optimally thresholded — SIR_threshold_opt","title":"SIR optimally thresholded — SIR_threshold_opt","text":"Apply single-index \\(SIR\\) \\((X,Y)\\) \\(H\\) slices, soft/hard thresholding interest matrix \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\) optimal parameter \\(\\lambda_{opt}\\). \\(\\lambda_{opt}\\) found automatically among vector n_lambda \\(\\lambda\\), starting 0 maximum value \\(\\widehat{\\Sigma}_n^{-1}\\widehat{\\Gamma}_n\\). feature \\(X\\), number \\(\\lambda\\) associated selection feature stored (vector size \\(p\\)). vector sorted decreasing way. , thanks strucchange::breakpoints, breakpoint found sorted vector. coefficients variables left breakpoint, tend automatically toggled 0 due thresholding operation based \\(\\lambda_{opt}\\), removed (useless variables). Finally, \\(\\lambda_{opt}\\) corresponds first \\(\\lambda\\) associated \\(\\hat{b}\\) provides number zeros breakpoint's value. example, \\(X \\R^{10}\\) n_lambda=100, sorted vector can look like : , breakpoint 8.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SIR optimally thresholded — SIR_threshold_opt","text":"","code":"SIR_threshold_opt(   Y,   X,   H = 10,   n_lambda = 100,   thresholding = \"hard\",   graph = TRUE,   output = TRUE,   choice = \"\" )"},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_opt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SIR optimally thresholded — SIR_threshold_opt","text":"Y numeric vector representing dependent variable (response vector). X matrix representing quantitative explanatory variables (bind column). H chosen number slices (default 10). n_lambda number lambda test. n_lambda tested lambdas uniformally distributed 0 maximum value interest matrix. (default 100). thresholding thresholding method choose hard soft (default hard). graph boolean, set TRUE plot graphs (default TRUE). output boolean, set TRUE print informations (default TRUE). choice graph plot: \"estim_ind\" Plot estimated index SIR model versus Y. \"opt_lambda\" Plot choice optimal lambda. \"cos2_selec\" Plot evolution cos^2 variable selection according lambda. \"regul_path\" Plot regularization path b. \"\" Plot every graphs (default).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_opt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SIR optimally thresholded — SIR_threshold_opt","text":"object class SIR_threshold_opt, attributes: b optimal estimated EDR direction, principal eigenvector interest matrix. lambdas vector contains tested lambdas. lambda_opt optimal lambda. mat_b matrix size p*n_lambda contains estimation beta columns lambda. n_lambda number lambda tested. vect_nb_zeros number 0 b lambda. list_relevant_variables list contains variables selected model. fit_bp object class breakpoints strucchange package, contains informations breakpoint allows deduce optimal lambda. indices_useless_var vector contains p items: variable associated number lambda selects variable. vect_cos_squared vector contains lambda, cosine squared vanilla SIR SIR thresholded. Y response vector. n Sample size. p number variables X. H chosen number slices. M1 interest matrix thresholded optimal lambda. thresholding thresholding method used. call Unevaluated call function. X_reduced X data restricted variables selected model. can used estimate new SIR model relevant variables improve estimation b. index_pred index Xb' estimated SIR.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/SIR_threshold_opt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SIR optimally thresholded — SIR_threshold_opt","text":"","code":"# Generate Data set.seed(2) n <- 200 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply SIR with soft thresholding SIR_threshold_opt(Y,X,H=10,n_lambda=300,thresholding=\"soft\") #>  #> Call: #> SIR_threshold_opt(Y = Y, X = X, H = 10, n_lambda = 300, thresholding = \"soft\") #>  #> Results of EDR directions estimation: #>  #>     Estimated direction #> X1               -0.705 #> X2               -0.709 #> X3                0.000 #> X4                0.000 #> X5                0.000 #> X6                0.000 #> X7                0.000 #> X8                0.000 #> X9                0.000 #> X10               0.000 #>"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical output of SIR — plot.SIR","title":"Graphical output of SIR — plot.SIR","text":"Display 10 first eigen values estimated index versus Y SIR model.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical output of SIR — plot.SIR","text":"","code":"# S3 method for SIR plot(x, choice = \"\", ...)"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical output of SIR — plot.SIR","text":"x SIR object choice graph plot: \"eigvals\" Plot eigen values matrix interest. \"estim_ind\" Plot estimated index SIR model versus Y. \"\" Plot every graphs (default). ... arguments passed methods, graphical parameters (used ).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical output of SIR — plot.SIR","text":"return value","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical output of SIR — plot.SIR","text":"","code":"# Generate Data set.seed(10) n <- 500 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply SIR res = SIR(Y, X, H = 10, graph = FALSE)  # Eigen values plot(res,choice=\"eigvals\")   # Estimated index versus Y plot(res,choice=\"estim_ind\")"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical output of SIR_bootstrap — plot.SIR_bootstrap","title":"Graphical output of SIR_bootstrap — plot.SIR_bootstrap","text":"Display 10 first eigen values estimated index versus Y  SIRbootstrap model.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical output of SIR_bootstrap — plot.SIR_bootstrap","text":"","code":"# S3 method for SIR_bootstrap plot(x, choice = \"\", ...)"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical output of SIR_bootstrap — plot.SIR_bootstrap","text":"x SIR_bootstrap object choice graph plot: \"eigvals\" Plot eigen values matrix interest. \"estim_ind\" Plot estimated index SIR model versus Y. \"\" Plot every graphs (default). ... arguments passed methods, graphical parameters (used ).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical output of SIR_bootstrap — plot.SIR_bootstrap","text":"return value","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical output of SIR_bootstrap — plot.SIR_bootstrap","text":"","code":"# Generate Data set.seed(10) n <- 500 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply bootstrap SIR res = SIR_bootstrap(Y, X, H = 10, B = 10)  # Eigen values plot(res,choice=\"eigvals\")  # Estimated index versus Y plot(res,choice=\"estim_ind\")"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical output of SIR_threshold — plot.SIR_threshold","title":"Graphical output of SIR_threshold — plot.SIR_threshold","text":"Display 10 first eigen values estimated index versus Y  thresholded SIR model.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical output of SIR_threshold — plot.SIR_threshold","text":"","code":"# S3 method for SIR_threshold plot(x, choice = \"\", ...)"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical output of SIR_threshold — plot.SIR_threshold","text":"x SIR_threshold object choice graph plot: \"eigvals\" Plot eigen values matrix interest. \"estim_ind\" Plot estimated index SIR model versus Y. \"\" Plot every graphs (default). ... arguments passed methods, graphical parameters (used ).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical output of SIR_threshold — plot.SIR_threshold","text":"return value","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical output of SIR_threshold — plot.SIR_threshold","text":"","code":"# Generate Data set.seed(10) n <- 500 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply SIR with hard thresholding res = SIR_threshold(Y, X, H = 10, lambda = 0.2, thresholding = \"hard\")  # Eigen values plot(res,choice=\"eigvals\")  # Estimated index versus Y plot(res,choice=\"estim_ind\")"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical output of SIR_threshold_bootstrap — plot.SIR_threshold_bootstrap","title":"Graphical output of SIR_threshold_bootstrap — plot.SIR_threshold_bootstrap","text":"Display estimated index versus Y SIR model, size models, occurrence variable selection, distribution coefficients   \\(\\hat{b}\\) distribution \\(\\lambda_{opt}\\) found across replications.","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical output of SIR_threshold_bootstrap — plot.SIR_threshold_bootstrap","text":"","code":"# S3 method for SIR_threshold_bootstrap plot(x, choice = \"\", ...)"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical output of SIR_threshold_bootstrap — plot.SIR_threshold_bootstrap","text":"x SIR_threshold_bootstrap object choice graph plot: \"estim_ind\" Plot estimated index SIR model versus Y. \"size\" Plot size models across replications. \"selec_var\" Plot occurrence selected variables across replications. \"coefs_b\" Plot value \\(\\hat{b}\\) across replications. \"lambdas_replic\" Plot distribution \\(\\lambda_{opt}\\) across replications. \"\" Plot every graphs (default). ... arguments passed methods, graphical parameters (used ).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical output of SIR_threshold_bootstrap — plot.SIR_threshold_bootstrap","text":"return value","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical output of SIR_threshold_bootstrap — plot.SIR_threshold_bootstrap","text":"","code":"# Generate Data set.seed(10) n <- 200 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # \\donttest{ res = SIR_threshold_bootstrap(Y,X,H=10,n_lambda=300,thresholding=\"hard\", n_replications=30,k=2) #> [1] \"Replication 5 / 30\" #> [1] \"Replication 10 / 30\" #> [1] \"Replication 15 / 30\" #> [1] \"Replication 20 / 30\" #> [1] \"Replication 25 / 30\" #> [1] \"Replication 30 / 30\"  # Estimated index versus Y plot(res,choice=\"estim_ind\")  # Model size plot(res,choice=\"size\")  # Selected variables plot(res,choice=\"selec_var\")  # Coefficients of b plot(res,choice=\"coefs_b\")  # Optimal lambdas plot(res,choice=\"lambdas_replic\") # }"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_opt.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical output of SIR_threshold_opt — plot.SIR_threshold_opt","title":"Graphical output of SIR_threshold_opt — plot.SIR_threshold_opt","text":"Display 10 first eigen values,estimated index versus Y SIR model, evolution \\(cos^2\\) variable selection according \\(\\lambda\\),  regularization path \\(\\hat{b}\\).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_opt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical output of SIR_threshold_opt — plot.SIR_threshold_opt","text":"","code":"# S3 method for SIR_threshold_opt plot(x, choice = \"\", ...)"},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_opt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical output of SIR_threshold_opt — plot.SIR_threshold_opt","text":"x SIR_threshold_opt object choice graph plot: \"estim_ind\" Plot estimated index SIR model versus Y. \"opt_lambda\" Plot choice \\(\\lambda_{opt}\\). \"cos2_selec\" Plot evolution \\(cos^2\\) variable selection according    \\(\\lambda\\). \"regul_path\" Plot regularization path \\(\\hat{b}\\). \"\" Plot every graphs (default). ... arguments passed methods, graphical parameters (used ).","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_opt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical output of SIR_threshold_opt — plot.SIR_threshold_opt","text":"return value","code":""},{"path":"https://clement-w.github.io/SIRthresholded/reference/plot.SIR_threshold_opt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical output of SIR_threshold_opt — plot.SIR_threshold_opt","text":"","code":"# Generate Data set.seed(10) n <- 200 beta <- c(1,1,rep(0,8)) X <- mvtnorm::rmvnorm(n,sigma=diag(1,10)) eps <- rnorm(n) Y <- (X%*%beta)**3+eps  # Apply SIR with soft thresholding res = SIR_threshold_opt(Y,X,H=10,n_lambda=100,thresholding=\"soft\")  # Estimated index versus Y plot(res,choice=\"estim_ind\")  # Choice of optimal lambda plot(res,choice=\"opt_lambda\")  # Evolution of cos^2 and var selection according to lambda plot(res,choice=\"cos2_selec\")  # Regularization path plot(res,choice=\"regul_path\")"}]
